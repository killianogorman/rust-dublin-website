---
interface Props {
  id: string;
  image: {
    alt: string;
    url: string;
  };
  tags: string[];
  name: string;
  bio: string;
  urls: string[];
  company_info: {
    position: string | null;
    company_name: string | null;
    company_bio: string | null;
  };
}

import Layout from "./Layout.astro";

const { name, bio, tags, image, urls, company_info, id } = Astro.props;
import { getCollection } from "astro:content";
const posts = await getCollection("blog", ({ data }) => {
  return data.author.id == id;
});
const talks = await getCollection("talks", ({ data }) => {
  return data.author.id == id;
});
---

<Layout title={`${name} | Rust Dublin`} description={bio} keywords={""}>
  <main class="pt-16 px-12 sm:px-28 text-lg pb-5">
    <section
      class="flex flex-col sm:flex-row justify-between gap-12 pt-16 sm:pt-32 pb-16"
    >
      <div class="sm:w-[55%] pr-11">
        {
          company_info.company_name ? (
            <p class="font-semibold">
              {company_info.position ?? ""} | {company_info.company_name ?? ""}
            </p>
          ) : null
        }
        <h1 class="font-alfa-slab text-3xl sm:text-4xl">{name}</h1>
        <p>{bio}</p>
        <div
          class="pt-3 pb-2 flex gap-3 text-sm uppercase w-full overflow-hidden flex-wrap"
        >
          <!-- {
              // bg-pink px-5 py-3 rounded-full font-black drop-shadow-[3px_4px_rgba(0,0,0,1)]
              tags.map((tag) => (
                <a
                  href={`/talks?tags=[${tag}]`}
                  class=" py-1 px-3 border-blk border-[1.4px] rounded-full hover:bg-yeller hover:text-blk hover:drop-shadow-[3px_4px_rgba(0,0,0,1)] transition-all"
                >
                  {tag}
                </a>
              ))
            } -->
        </div>
      </div>
      <div>
        <img
          width="222"
          class="sm:w-48 h-48 relative drop-shadow-[6px_7px_rgba(0,0,0,1)] rounded-md object-cover"
          src={image?.url ?? ""}
          alt={image?.alt ?? ""}
        />
      </div>
    </section>

    <section
      class="pt-32 border-t-[1px] border-dashed border-blk flex justify-around"
    >
      <div class="w-full flex flex-col gap-8">
        <h1 class="font-alfa-slab text-7xl">Talks</h1>
        {
          talks.reverse().map(async (e) => {
            return (
              <a
                class="p-9 w-full px-5 border-blk border-[1.4px] bg-wh hover:drop-shadow-[3px_4px_rgba(0,0,0,1)] transition-all duration-150"
                href={"/talks/" + e.slug}
              >
                <article class="w-full" title={e.data.title}>
                  {/* Top Bar */}
                  <div class="flex items-center pb-8 gap-3">
                    <div class="pt-3 pb-2 flex gap-3 text-sm uppercase w-full overflow-hidden flex-wrap">
                      {e.data.tags.slice(1, 4).map((v) => {
                        return (
                          <div class=" py-1 px-3 border-blk border-[1.4px] rounded-full hover:bg-yeller hover:text-blk hover:drop-shadow-[3px_4px_rgba(0,0,0,1)] transition-all">
                            {v}
                          </div>
                        );
                      })}
                    </div>
                    <h3>
                      <span>{e.data.pubDate.toLocaleDateString()}</span>
                    </h3>
                  </div>
                  {/* Title Description */}
                  <div class="flex flex-col">
                    <h1 class="text-2xl sm:text-4xl pb-3 font-alfa-slab">
                      {e.data.title}
                    </h1>
                    <p>{e.data.description}</p>
                  </div>
                  {/* Author */}
                  <div class="flex flex-row items-center gap-4 pt-3">
                    <img
                      class="h-7 w-7 rounded-full overflow-clip object-cover"
                      src={image.url}
                      alt={image.alt}
                    />
                    <span class="">{name}</span>
                  </div>
                </article>
              </a>
            );
          })
        }
        {
          posts.length > 0 && (
            <h1 class=" font-alfa-slab text-7xl">Blog Posts</h1>
          )
        }
        {
          posts.reverse().map(async (e) => {
            return (
              <a
                class="p-9 w-full px-5 border-blk border-[1.4px] bg-wh hover:drop-shadow-[3px_4px_rgba(0,0,0,1)] transition-all duration-150"
                href={"/blog/" + e.slug}
              >
                <article class="w-full" title={e.data.title}>
                  {/* Top Bar */}
                  <div class="flex items-center pb-8 gap-3">
                    <div class="pt-3 pb-2 flex gap-3 text-sm uppercase w-full overflow-hidden flex-wrap">
                      {e.data.tags.slice(1, 4).map((v) => {
                        return (
                          <div class=" py-1 px-3 border-blk border-[1.4px] rounded-full hover:bg-pink hover:text-blk hover:drop-shadow-[3px_4px_rgba(0,0,0,1)] transition-all">
                            {v}
                          </div>
                        );
                      })}
                    </div>
                    <h3>
                      <span>{e.data.pubDate.toLocaleDateString()}</span>
                    </h3>
                  </div>
                  {/* Title Description */}
                  <div class="flex flex-col">
                    <h1 class="text-2xl sm:text-4xl pb-3 font-alfa-slab">
                      {e.data.title}
                    </h1>
                    <p>{e.data.description}</p>
                  </div>
                  {/* Author */}
                  <div class="flex flex-row items-center gap-4 pt-3">
                    <img
                      class="h-7 w-7 rounded-full overflow-clip object-cover"
                      src={image.url}
                      alt={image.alt}
                    />
                    <span class="">{name}</span>
                  </div>
                </article>
              </a>
            );
          })
        }
      </div>
      <div></div>
    </section>
  </main>
</Layout>
